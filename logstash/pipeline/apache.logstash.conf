input {
  http {
    port => 8081
    type => "access"
  }

  file {
    path => ["${PWD}/input/apache.log"]
    type => "access"
  }
}

filter {

  if [headers][request_path] == "/error" {
    mutate {
      replace => {
        "type" => "error"
      }
    }
  } else {

    grok {    
      match => {
        # "message" => '%{IP:ip_address} %{USER:identity} %{USER:user_id} \[%{HTTPDATE:timestamp}] "%{WORD:http_method} %{URIPATHPARAM:req_path} HTTP/%{NUMBER:http_version:float}" %{INT:http_status:int} %{INT:bytes:int}'
        "message" => "%{HTTPD_COMBINEDLOG}"
      }
    }

    if "_grokparsefailure" in [tags] {
      drop { }
    }
    
    useragent {
      source => "agent"
      target => "ua"
    }

    mutate {
      convert => {
        "response" => "integer"
        "httpversion" => "float"
        "bytes" => "integer"
      }

      gsub => [
        "agent", '"', "",
        "referrer", '"', ""
        ]

      remove_field => ["path", "host", "@version", "message"]
    }

    date {
      match => ["timestamp", "dd/MMM/yyyy:HH:mm:ss Z"]
      remove_field => ["timestamp"]
    }

    geoip {
      source => "clientip"
    }
  }
}

output {
  stdout {
    
  }

  file {
    path => "${PWD}/output/%{type}-%{+yyyyMMdd}.log"
  }

  elasticsearch {
    hosts => ["http://codebangkok.com:9200"]
    index => "bond-%{type}-%{+yyyyMMdd}"
  }
}